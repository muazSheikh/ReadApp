{"version":3,"sources":["BooksAPI.js","components/SearchButton.js","components/Search.js","components/Shelf.js","components/Shelves.js","components/Header.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","search","query","fetch","concat","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","data","books","SearchButton","_this","this","react_default","a","createElement","className","onClick","props","showSearchPage","React","Component","Search","state","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","afterSubmit","_this2","onSubmit","type","placeholder","onChange","Shelf","shelfBooks","Books","name","map","book","key","id","style","width","height","backgroundImage","imageLinks","thumbnail","shelf","e","changeShelf","disabled","title","authors","Shelves","allBooks","currentlyReading","filter","wantToRead","read","components_Shelf","Header","BooksApp","eachBook","showTheSearchPage","changeBookShelf","b","onTermSubmit","term","response","BooksAPI","components_Search","components_Header","components_Shelves","components_SearchButton","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.69207c83.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from \"react\";\r\n\r\nclass SearchButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"open-search\">\r\n        <button onClick={() => this.props.showSearchPage(true)}>\r\n          Add a book\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchButton;\r\n","import React from \"react\";\r\n\r\nclass Search extends React.Component {\r\n  state = {\r\n    query: \"\",\r\n  };\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({ query: event.target.value });\r\n  };\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.afterSubmit(this.state.query);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <button\r\n            className=\"close-search\"\r\n            onClick={() => this.props.showSearchPage(false)}\r\n          >\r\n            Close\r\n          </button>\r\n          <div className=\"search-books-input-wrapper\">\r\n            {/*\r\n\r\n            \r\n                    NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                    You can find these search terms here:\r\n                    https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n  \r\n                    However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                    you don't find a specific author or title. Every search is limited by search terms.\r\n                  */}\r\n\r\n            <div className=\"search-bar ui segment\">\r\n              <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n                <div className=\"field\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search by title or author\"\r\n                    onChange={this.onInputChange}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\"></ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nclass Shelf extends React.Component {\r\n  render() {\r\n    const shelfBooks = this.props.Books;\r\n\r\n    return (\r\n      <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">{this.props.name}</h2>\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid\">\r\n            {shelfBooks.map((book) => (\r\n              <li key={book.id}>\r\n                <div className=\"book\">\r\n                  <div className=\"book-top\">\r\n                    <div\r\n                      className=\"book-cover\"\r\n                      style={{\r\n                        width: 128,\r\n                        height: 193,\r\n                        backgroundImage: `url(${book.imageLinks.thumbnail})`,\r\n                      }}\r\n                    ></div>\r\n                    <div className=\"book-shelf-changer\">\r\n                      <select\r\n                        value={book.shelf}\r\n                        onChange={(e) => {\r\n                          this.props.changeShelf(book, e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"move\" disabled>\r\n                          Move to...\r\n                        </option>\r\n                        <option value=\"currentlyReading\">\r\n                          Currently Reading\r\n                        </option>\r\n                        <option value=\"wantToRead\">Want to Read</option>\r\n                        <option value=\"read\">Read</option>\r\n                        <option value=\"none\">None</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"book-title\">{book.title}</div>\r\n                  <div className=\"book-authors\">{book.authors}</div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shelf;\r\n","import React from \"react\";\r\nimport Shelf from \"./Shelf\";\r\n\r\nclass Shelves extends React.Component {\r\n  render() {\r\n    const allBooks = this.props.allBooks;\r\n    const currentlyReading = allBooks.filter(\r\n      (book) => book.shelf === \"currentlyReading\"\r\n    );\r\n    const wantToRead = allBooks.filter((book) => book.shelf === \"wantToRead\");\r\n    const read = allBooks.filter((book) => book.shelf === \"read\");\r\n\r\n    return (\r\n      <div className=\"list-books-content\">\r\n        <div>\r\n          <Shelf\r\n            changeShelf={this.props.changeShelf}\r\n            Books={currentlyReading}\r\n            name=\"Currently Reading\"\r\n          />\r\n          <Shelf\r\n            changeShelf={this.props.changeShelf}\r\n            Books={wantToRead}\r\n            name=\"Want to Read\"\r\n          />\r\n          <Shelf\r\n            changeShelf={this.props.changeShelf}\r\n            Books={read}\r\n            name=\"Read\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shelves;\r\n","import React from \"react\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"list-books-title\">\r\n        <h1>MyReads</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport SearchButton from \"./components/SearchButton\";\nimport Search from \"./components/Search\";\nimport Shelves from \"./components/Shelves\";\nimport Header from \"./components/Header\";\nimport \"./App.css\";\n//import Router from \"./components/Route\";\n\nclass BooksApp extends React.Component {\n  state = {\n    showSearchPage: false,\n    books: [],\n    eachBook: [],\n  };\n\n  showTheSearchPage = (value) => {\n    this.setState({ showSearchPage: value });\n  };\n\n  componentDidMount() {\n    BooksAPI.getAll().then((res) => {\n      this.setState({ books: res });\n    });\n  }\n\n  changeBookShelf = (book, shelf) => {\n    this.setState({\n      books: this.state.books.map((b) => {\n        if (b.id === book.id) {\n          b.shelf = shelf;\n        }\n        return b;\n      }),\n    });\n  };\n\n  onTermSubmit = (term) => {\n    const response = BooksAPI.search(term);\n    this.setState({\n      eachBook: response,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        {this.state.showSearchPage ? (\n          <div>\n            {/* <Router path=\"/search\"> */}\n            <Search\n              afterSubmit={this.onTermSubmit}\n              showSearchPage={this.showTheSearchPage}\n              eachBook={this.state.eachBook}\n            />\n            {/* </Router> */}\n          </div>\n        ) : (\n          <div className=\"list-books\">\n            <Header />\n            <Shelves\n              allBooks={this.state.books}\n              changeShelf={this.changeBookShelf}\n            />\n            {/* <Router path=\"/\"> */}\n            <SearchButton showSearchPage={this.showTheSearchPage} />\n            {/* </Router> */}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}